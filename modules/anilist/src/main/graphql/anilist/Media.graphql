fragment AniListMedia on Media {
    id
    description
    title {
        english
        romaji
        native
    }
    type
    coverImage {
        extraLarge
        large
        medium
        color
    }
    synonyms
}

fragment AniListListRowMedia on Media {
    id
    bannerImage
    coverImage {
        color
        extraLarge
        large
    }
    title {
        userPreferred
    }
    nextAiringEpisode {
        id
        episode
        airingAt
    }
    averageScore
    episodes
    format
    genres
    isAdult
    mediaListEntry {
        status
    }
    season
    seasonYear
    source
    status
    tags {
        id
        name
        isAdult
        isGeneralSpoiler
        isMediaSpoiler
        rank
    }
    startDate {
        year
        month
        day
    }
    popularity
}

query MediaAdvancedSearch($page: Int, $perPage: Int, $search: String, $type: MediaType!,
    $sort: [MediaSort], $genreIn: [String], $genreNotIn: [String], $tagIn: [String],
    $tagNotIn: [String], $statusIn: [MediaStatus], $statusNotIn: [MediaStatus],
    $formatIn: [MediaFormat], $formatNotIn: [MediaFormat], $isAdult: Boolean, $onList: Boolean,
    $season: MediaSeason, $seasonYear: Int, $startDateGreater: FuzzyDateInt,
    $startDateLesser: FuzzyDateInt, $averageScoreGreater: Int, $averageScoreLesser: Int,
    $episodesGreater: Int, $episodesLesser: Int, $sourceIn: [MediaSource], $minimumTagRank: Int) {
    Page(page: $page, perPage: $perPage) @nonnull {
        pageInfo @nonnull {
            hasNextPage
            total
        }
        media(search: $search, type: $type, sort: $sort, genre_in: $genreIn,
            genre_not_in: $genreNotIn, tag_in: $tagIn, tag_not_in: $tagNotIn,
            status_in: $statusIn, status_not_in: $statusNotIn, format_in: $formatIn,
            format_not_in: $formatNotIn, isAdult: $isAdult, onList: $onList,
            season: $season, seasonYear: $seasonYear, startDate_greater: $startDateGreater,
            startDate_lesser: $startDateLesser, averageScore_greater: $averageScoreGreater,
            averageScore_lesser: $averageScoreLesser, episodes_greater: $episodesGreater,
            episodes_lesser: $episodesLesser, source_in: $sourceIn,
            minimumTagRank: $minimumTagRank) @nonnull {
            ...AniListListRowMedia
        }
    }
}

query MediaDetails($mediaId: Int!) {
    Media(id: $mediaId) {
        bannerImage
        coverImage {
            color
            extraLarge
        }
        title {
            romaji
            english
            native
            userPreferred
        }

        # TODO: Handle pagination
        characters(sort: [RELEVANCE, ROLE], perPage: 50) {
            nodes {
                id
                name {
                    full
                    alternative
                    userPreferred
                }
                image {
                    large
                }
            }
            edges {
                voiceActors {
                    id
                    languageV2
                    image {
                        large
                    }
                    name {
                        full
                        alternative
                        userPreferred
                    }
                }
                node {
                    id
                }
            }
        }
        description
        averageScore
        meanScore
        duration
        favourites
        source
        synonyms
        episodes
        format
        genres
        nextAiringEpisode {
            episode
            airingAt
        }
        popularity
        relations {
            edges {
                id
                relationType
                node {
                    ...AniListListRowMedia
                }
            }
        }
        recommendations {
            edges {
                node {
                    id
                    rating
                    mediaRecommendation {
                        ...AniListListRowMedia
                    }
                }
            }
        }
        season
        seasonYear
        status
        startDate {
            year
            month
            day
        }
        endDate {
            year
            month
            day
        }
        tags {
            id
            name
            isAdult
            isGeneralSpoiler
            isMediaSpoiler
            rank
        }
        type
        volumes
        chapters
    }
}

query MediaSearch($search: String, $perPage: Int, $page: Int) {
    Page(perPage: $perPage, page: $page) @nonnull {
        media(search: $search) @nonnull {
            ...AniListMedia
        }
    }
}

query MediaById($id: Int) {
    Media(id: $id) {
        ...AniListMedia
    }
}

# There are different variants because a Media object query can't be optional
query MediaByIds2(
    $id0: Int,
    $id1: Int,
) {

    media0:Media(id: $id0) {
        ...AniListMedia
    }

    media1:Media(id: $id1) {
        ...AniListMedia
    }
}

query MediaByIds3(
    $id0: Int,
    $id1: Int,
    $id2: Int,
) {

    media0:Media(id: $id0) {
        ...AniListMedia
    }

    media1:Media(id: $id1) {
        ...AniListMedia
    }

    media2:Media(id: $id2) {
        ...AniListMedia
    }
}

query MediaByIds4(
    $id0: Int,
    $id1: Int,
    $id2: Int,
    $id3: Int,
) {

    media0:Media(id: $id0) {
        ...AniListMedia
    }

    media1:Media(id: $id1) {
        ...AniListMedia
    }

    media2:Media(id: $id2) {
        ...AniListMedia
    }

    media3:Media(id: $id3) {
        ...AniListMedia
    }
}

query MediaByIds5(
    $id0: Int,
    $id1: Int,
    $id2: Int,
    $id3: Int,
    $id4: Int,
) {

    media0:Media(id: $id0) {
        ...AniListMedia
    }

    media1:Media(id: $id1) {
        ...AniListMedia
    }

    media2:Media(id: $id2) {
        ...AniListMedia
    }

    media3:Media(id: $id3) {
        ...AniListMedia
    }

    media4:Media(id: $id4) {
        ...AniListMedia
    }
}

query MediaByIds10(
    $id0: Int,
    $id1: Int,
    $id2: Int,
    $id3: Int,
    $id4: Int,
    $id5: Int,
    $id6: Int,
    $id7: Int,
    $id8: Int,
    $id9: Int,
) {

    media0:Media(id: $id0) {
        ...AniListMedia
    }

    media1:Media(id: $id1) {
        ...AniListMedia
    }

    media2:Media(id: $id2) {
        ...AniListMedia
    }

    media3:Media(id: $id3) {
        ...AniListMedia
    }

    media4:Media(id: $id4) {
        ...AniListMedia
    }

    media5:Media(id: $id5) {
        ...AniListMedia
    }

    media6:Media(id: $id6) {
        ...AniListMedia
    }

    media7:Media(id: $id7) {
        ...AniListMedia
    }

    media8:Media(id: $id8) {
        ...AniListMedia
    }

    media9:Media(id: $id9) {
        ...AniListMedia
    }
}

query MediaByIds15(
    $id0: Int,
    $id1: Int,
    $id2: Int,
    $id3: Int,
    $id4: Int,
    $id5: Int,
    $id6: Int,
    $id7: Int,
    $id8: Int,
    $id9: Int,
    $id10: Int,
    $id11: Int,
    $id12: Int,
    $id13: Int,
    $id14: Int,
) {

    media0:Media(id: $id0) {
        ...AniListMedia
    }

    media1:Media(id: $id1) {
        ...AniListMedia
    }

    media2:Media(id: $id2) {
        ...AniListMedia
    }

    media3:Media(id: $id3) {
        ...AniListMedia
    }

    media4:Media(id: $id4) {
        ...AniListMedia
    }

    media5:Media(id: $id5) {
        ...AniListMedia
    }

    media6:Media(id: $id6) {
        ...AniListMedia
    }

    media7:Media(id: $id7) {
        ...AniListMedia
    }

    media8:Media(id: $id8) {
        ...AniListMedia
    }

    media9:Media(id: $id9) {
        ...AniListMedia
    }

    media10:Media(id: $id10) {
        ...AniListMedia
    }

    media11:Media(id: $id11) {
        ...AniListMedia
    }

    media12:Media(id: $id12) {
        ...AniListMedia
    }

    media13:Media(id: $id13) {
        ...AniListMedia
    }

    media14:Media(id: $id14) {
        ...AniListMedia
    }
}

query MediaWithCharacters($mediaId: Int, $page: Int, $perPage: Int) {
    Media(id: $mediaId) @nonnull {
        characters(page: $page, perPage: $perPage, sort: [RELEVANCE, ROLE]) @nonnull {
            nodes @nonnull {
                id
            }
        }
    }
}
