query AuthedUser {
    Viewer {
        id
        name
        options {
            profileColor
        }
        mediaListOptions {
            scoreFormat
        }
    }
}

fragment UserFavoriteMediaNode on Media {
    ...MediaNavigationData
    id
    coverImage {
        color
        extraLarge
    }
    title {
        userPreferred
    }
    format
    averageScore
}

query UserById($id: Int!) {
    User(id: $id) {
        ...UserNavigationData
        id
        name
        about(asHtml: true)
        avatar {
            large
        }
        bannerImage
        isFollower
        isFollowing
        createdAt
        previousNames {
            name
        }

        favourites {
            anime(page: 1, perPage: 10) {
                pageInfo {
                    ...PaginationInfo
                }
                nodes {
                    ...UserFavoriteMediaNode
                }
            }
            manga(page: 1, perPage: 10) {
                pageInfo {
                    ...PaginationInfo
                }
                nodes {
                    ...UserFavoriteMediaNode
                }
            }
            characters(page: 1, perPage: 10) {
                pageInfo {
                    ...PaginationInfo
                }
                edges {
                    ...DetailsCharacterEdge
                }
            }
            staff(page: 1, perPage: 10) {
                pageInfo {
                    ...PaginationInfo
                }
                nodes {
                    ...StaffNavigationData
                    primaryOccupations
                }
            }
            studios(page: 1, perPage: 10) {
                pageInfo {
                    ...PaginationInfo
                }
                nodes {
                    ...StudioListRowFragment
                }
            }
        }

        statistics {
            anime {
                count
                meanScore
                minutesWatched
                ...UserMediaStatistics
            }
            manga {
                count
                meanScore
                chaptersRead
                ...UserMediaStatistics
            }
        }
    }
}

query UserDetailsAnimePage($userId: Int!, $page: Int!, $perPage: Int!) {
    User(id: $userId) @nonnull {
        favourites @nonnull {
            anime(page: $page, perPage: $perPage) @nonnull {
                pageInfo @nonnull {
                    ...PaginationInfo
                }
                nodes @nonnull {
                    ...UserFavoriteMediaNode
                }
            }
        }
    }
}

query UserDetailsMangaPage($userId: Int!, $page: Int!, $perPage: Int!) {
    User(id: $userId) @nonnull {
        favourites @nonnull {
            manga(page: $page, perPage: $perPage) @nonnull {
                pageInfo @nonnull {
                    ...PaginationInfo
                }
                nodes @nonnull {
                    ...UserFavoriteMediaNode
                }
            }
        }
    }
}

query UserDetailsCharactersPage($userId: Int!, $page: Int!, $perPage: Int!) {
    User(id: $userId) @nonnull {
        favourites @nonnull {
            characters(page: $page, perPage: $perPage) @nonnull {
                pageInfo @nonnull {
                    ...PaginationInfo
                }
                edges @nonnull {
                    ...DetailsCharacterEdge
                }
            }
        }
    }
}

query UserDetailsStaffPage($userId: Int!, $page: Int!, $perPage: Int!) {
    User(id: $userId) @nonnull {
        favourites @nonnull {
            staff(page: $page, perPage: $perPage) @nonnull {
                pageInfo @nonnull {
                    ...PaginationInfo
                }
                nodes @nonnull {
                    ...StaffNavigationData
                    primaryOccupations
                }
            }
        }
    }
}

query UserDetailsStudiosPage($userId: Int!, $page: Int!, $perPage: Int!) {
    User(id: $userId) @nonnull {
        favourites @nonnull {
            studios(page: $page, perPage: $perPage) @nonnull {
                pageInfo @nonnull {
                    ...PaginationInfo
                }
                nodes @nonnull {
                    ...StudioListRowFragment
                }
            }
        }
    }
}

fragment UserMediaStatistics on UserStatistics {
    formats(sort: [COUNT_DESC]) {
        count
        format
    }

    statuses(sort: [COUNT_DESC]) {
        count
        status
    }

    scores {
        count
        score
    }

    lengths {
        count
        length
    }

    releaseYears {
        count
        releaseYear
    }

    startYears {
        count
        startYear
    }

    genres(sort: COUNT_DESC) {
        count
        genre
        meanScore
        chaptersRead
        minutesWatched
        mediaIds
    }

    tags(sort: COUNT_DESC) {
        count
        tag {
            id
            name
        }
        meanScore
        chaptersRead
        minutesWatched
        mediaIds
    }

    voiceActors {
        count
        voiceActor {
            ...StaffNavigationData
        }
        meanScore
        chaptersRead
        minutesWatched
        mediaIds
    }

    studios {
        count
        studio {
            id
            name
        }
        meanScore
        chaptersRead
        minutesWatched
        mediaIds
    }

    staff {
        count
        staff {
            ...StaffNavigationData
        }
        meanScore
        chaptersRead
        minutesWatched
        mediaIds
    }
}

fragment UserNavigationData on User {
    id
    avatar {
        large
    }
    name
}

query UserSearch(
    $page: Int,
    $perPage: Int,
    $search: String,
    $sort: [UserSort],
    $isModerator: Boolean,
) {
    Page(page: $page, perPage: $perPage) @nonnull {
        pageInfo @nonnull {
            hasNextPage
            total
        }

        users(search: $search, sort: $sort, isModerator: $isModerator) {
            ...UserNavigationData
            bannerImage
            favourites {
                anime {
                    edges {
                        favouriteOrder
                        node {
                            ...MediaNavigationData
                        }
                    }
                }
                manga {
                    edges {
                        favouriteOrder
                        node {
                            ...MediaNavigationData
                        }
                    }
                }
            }
        }
    }
}

mutation ToggleFollow($userId: Int!) {
    ToggleFollow(userId: $userId) {
        isFollowing
    }
}

query UserSocialFollowing($userId: Int!, $perPage: Int!, $page: Int!) {
    Page(perPage: $perPage, page: $page) {
        pageInfo @nonnull {
            ...PaginationInfo
        }
        following(userId: $userId) {
            ...UserNavigationData
        }
    }
}

query UserSocialFollowers($userId: Int!, $perPage: Int!, $page: Int!) {
    Page(perPage: $perPage, page: $page) {
        pageInfo @nonnull {
            ...PaginationInfo
        }
        followers(userId: $userId) {
            ...UserNavigationData
        }
    }
}

fragment ActivityItem on ActivityUnion {
    ... on TextActivity {
        ...TextActivityFragment
    }
    ... on ListActivity {
        ...ListActivityWithoutMedia
        media {
            ...MediaCompactWithTags
            ...MediaWithListStatus
        }
    }
    ... on MessageActivity {
        createdAt
        id
        isLiked
        likeCount
        isSubscribed
        replyCount
        message
        messenger {
            ...UserNavigationData
        }
        recipient {
            ...UserNavigationData
        }
        type
    }
}

query UserSocialActivity(
    $isFollowing: Boolean!,
    $sort: [ActivitySort]!,
    $perPage: Int!,
    $page: Int!,
    $userId: Int,
    $userIdNotIn: [Int],
    $typeIn: [ActivityType],
    $typeNotIn: [ActivityType],
    $hasReplies: Boolean,
    $createdAtGreater: Int,
    $createdAtLesser: Int,
) {
    Page(perPage: $perPage, page: $page) {
        pageInfo @nonnull {
            ...PaginationInfo
        }
        activities(
            isFollowing: $isFollowing,
            sort: $sort,
            userId: $userId,
            userId_not_in: $userIdNotIn,
            type_in: $typeIn,
            type_not_in: $typeNotIn,
            hasReplies: $hasReplies,
            createdAt_greater: $createdAtGreater,
            createdAt_lesser: $createdAtLesser
        ) {
            ...ActivityItem
        }
    }
}
