fragment ForumThread on Thread {
    id
    title
    body
    replyCount
    viewCount
    replyCommentId
    isLocked
    isSticky
    isLiked
    isSubscribed
    repliedAt
    createdAt
    categories {
        id
        name
    }
    mediaCategories {
        id
        title {
            ...MediaTitleFragment
        }
        isAdult
    }
    user {
        ...UserNavigationData
    }
    replyUser {
        ...UserNavigationData
    }
}

query ForumRoot {
    # TODO: This assumes there is at most 6 stickied threads at once
    stickied: Page(perPage: 6) @nonnull {
        threads(sort: IS_STICKY) @nonnull {
            ...ForumThread
        }
    }

    active: Page(perPage: 5) @nonnull {
        threads(sort: REPLIED_AT_DESC) @nonnull {
            ...ForumThread
        }
    }

    new: Page(perPage: 5) @nonnull {
        threads(sort: ID_DESC) @nonnull {
            ...ForumThread
        }
    }

    releases: Page(perPage: 5) @nonnull {
        threads(categoryId: 5, sort: REPLIED_AT_DESC) @nonnull {
            ...ForumThread
        }
    }
}

query ForumThreadSearch(
    $search: String,
    $subscribed: Boolean,
    $categoryId: Int,
    $mediaCategoryId: Int,
    $sort: [ThreadSort],
    $page: Int!,
    $perPage: Int!,
) {
    Page(page: $page, perPage: $perPage) @nonnull {
        pageInfo {
            ...PaginationInfo
        }
        threads(
            search: $search,
            subscribed: $subscribed,
            categoryId: $categoryId,
            mediaCategoryId: $mediaCategoryId,
            sort: $sort,
        ) {
            ...ForumThread
        }
    }
}

query ForumThreadDetails($threadId: Int!) {
    Thread(id: $threadId) @nonnull {
        ...ForumThread
    }
}

# IMPORTANT: This query is crafted exactly so that the API returns childComments.
# If it ever changes, it needs to be verified that child comments get returned
query ForumThread_Comments($threadId: Int!, $page: Int!, $perPage: Int!) {
    Page(page: $page, perPage: $perPage) {
        pageInfo {
            ...PaginationInfo
        }
        threadComments(threadId: $threadId) {
            id
            comment
            childComments
            isLocked
            likeCount
            isLiked
            createdAt
            updatedAt
            user {
                id
                avatar {
                    large
                }
                name
            }
        }
    }
}

mutation ToggleForumThreadSubscribe($id: Int!, $subscribe: Boolean!) {
    ToggleThreadSubscription(threadId: $id, subscribe: $subscribe) @nonnull {
        isLiked
    }
}

mutation ToggleForumThreadLike($id: Int!) {
    ToggleLikeV2(id: $id, type: THREAD_COMMENT) @nonnull {
        ... on Thread {
            isLiked
        }
    }
}

mutation ToggleForumThreadCommentLike($id: Int!) {
    ToggleLikeV2(id: $id, type: THREAD_COMMENT) @nonnull {
        ... on ThreadComment {
            isLiked
        }
    }
}
