import kotlin.Boolean;
import kotlin.String;
import kotlin.collections.List;
import com.thekeeperofpie.artistalleydatabase.shared.alley.data.SeriesSource;

CREATE TABLE
    IF NOT EXISTS artistEntry2023 (
        id TEXT NOT NULL,
        booth TEXT NOT NULL COLLATE NOCASE,
        name TEXT NOT NULL COLLATE NOCASE,
        artistNames TEXT AS List<String> NOT NULL COLLATE NOCASE,
        summary TEXT,
        links TEXT AS List<String> NOT NULL,
        catalogLinks TEXT AS List<String> NOT NULL,
        driveLink TEXT,
        counter INTEGER NOT NULL DEFAULT 1,
        PRIMARY KEY (id)
    );

CREATE VIRTUAL TABLE IF NOT EXISTS artistEntry2023_fts USING FTS5 (
    id,
    booth,
    name,
    artistNames,
    summary,
    driveLink,
    counter,
    content=artistEntry2023,
    tokenize="unicode61 remove_diacritics 2"
);

CREATE TABLE
    IF NOT EXISTS artistEntry2024 (
        id TEXT NOT NULL,
        booth TEXT NOT NULL COLLATE NOCASE,
        name TEXT NOT NULL COLLATE NOCASE,
        summary TEXT,
        links TEXT AS List<String> NOT NULL,
        storeLinks TEXT AS List<String> NOT NULL,
        catalogLinks TEXT AS List<String> NOT NULL,
        driveLink TEXT,
        notes TEXT,
        seriesInferred TEXT AS List<String> NOT NULL,
        seriesConfirmed TEXT AS List<String> NOT NULL,
        merchInferred TEXT AS List<String> NOT NULL,
        merchConfirmed TEXT AS List<String> NOT NULL,
        counter INTEGER NOT NULL DEFAULT 1,
        PRIMARY KEY (id)
    );

CREATE VIRTUAL TABLE IF NOT EXISTS artistEntry2024_fts USING FTS5 (
    id,
    booth,
    name,
    summary,
    driveLink,
    seriesInferred,
    seriesConfirmed,
    merchInferred,
    merchConfirmed,
    counter,
    content=artistEntry2024,
    tokenize="unicode61 remove_diacritics 2"
);

CREATE TABLE
    IF NOT EXISTS artistEntry2025 (
        id TEXT NOT NULL,
        booth TEXT COLLATE NOCASE,
        name TEXT NOT NULL COLLATE NOCASE,
        summary TEXT,
        links TEXT AS List<String> NOT NULL,
        storeLinks TEXT AS List<String> NOT NULL,
        catalogLinks TEXT AS List<String> NOT NULL,
        linkFlags INTEGER NOT NULL DEFAULT 0,
        linkFlags2 INTEGER NOT NULL DEFAULT 0,
        driveLink TEXT,
        notes TEXT,
        commissions TEXT AS List<String> NOT NULL,
        commissionOnline INTEGER AS Boolean NOT NULL DEFAULT 0,
        commissionOnsite INTEGER AS Boolean NOT NULL DEFAULT 0,
        commissionOther INTEGER AS Boolean NOT NULL DEFAULT 0,
        commissionVGen INTEGER AS Boolean NOT NULL DEFAULT 0,
        seriesInferred TEXT AS List<String> NOT NULL,
        seriesConfirmed TEXT AS List<String> NOT NULL,
        merchInferred TEXT AS List<String> NOT NULL,
        merchConfirmed TEXT AS List<String> NOT NULL,
        counter INTEGER NOT NULL DEFAULT 1,
        PRIMARY KEY (id)
    );

CREATE VIRTUAL TABLE IF NOT EXISTS artistEntry2025_fts USING FTS5 (
    id,
    booth,
    name,
    summary,
    driveLink,
    notes,
    commissions,
    commissionOnline,
    commissionOnsite,
    commissionOther,
    commissionVGen,
    seriesInferred,
    seriesConfirmed,
    merchInferred,
    merchConfirmed,
    counter,
    content=artistEntry2025,
    tokenize="unicode61 remove_diacritics 2"
);

CREATE TABLE
    IF NOT EXISTS artistSeriesConnection (
        artistId TEXT NOT NULL,
        seriesId TEXT NOT NULL,
        state2024 INTEGER NOT NULL DEFAULT 0,
        state2025 INTEGER NOT NULL DEFAULT 0,
        PRIMARY KEY (artistId, seriesId)
    );

CREATE INDEX IF NOT EXISTS index_artistSeriesConnection_artistId ON artistSeriesConnection (artistId);
CREATE INDEX IF NOT EXISTS index_artistSeriesConnection_seriesId ON artistSeriesConnection (seriesId);

CREATE TABLE
    IF NOT EXISTS artistMerchConnection (
        artistId TEXT NOT NULL,
        merchId TEXT NOT NULL,
        state2024 INTEGER NOT NULL DEFAULT 0,
        state2025 INTEGER NOT NULL DEFAULT 0,
        PRIMARY KEY (artistId, merchId)
    );

CREATE INDEX IF NOT EXISTS index_artistMerchConnection_artistId ON artistMerchConnection (artistId);
CREATE INDEX IF NOT EXISTS index_artistMerchConnection_merchId ON artistMerchConnection (merchId);

CREATE TABLE
    IF NOT EXISTS stampRallyEntry2023 (
        id TEXT NOT NULL,
        fandom TEXT NOT NULL COLLATE NOCASE,
        hostTable TEXT NOT NULL COLLATE NOCASE,
        tables TEXT AS List<String> NOT NULL,
        links TEXT AS List<String> NOT NULL,
        counter INTEGER NOT NULL DEFAULT 1,
        PRIMARY KEY (id)
    );

CREATE VIRTUAL TABLE IF NOT EXISTS stampRallyEntry2023_fts USING FTS5 (
    id,
    fandom,
    tables,
    counter,
    content=stampRallyEntry2023,
    tokenize="unicode61 remove_diacritics 2"
);

CREATE TABLE
    IF NOT EXISTS stampRallyEntry2024 (
        id TEXT NOT NULL,
        fandom TEXT NOT NULL COLLATE NOCASE,
        hostTable TEXT NOT NULL COLLATE NOCASE,
        tables TEXT AS List<String> NOT NULL,
        links TEXT AS List<String> NOT NULL,
        tableMin INTEGER,
        totalCost INTEGER,
        prizeLimit INTEGER,
        notes TEXT,
        counter INTEGER NOT NULL DEFAULT 1,
        PRIMARY KEY (id)
    );

CREATE VIRTUAL TABLE IF NOT EXISTS stampRallyEntry2024_fts USING FTS5 (
    id,
    fandom,
    tables,
    totalCost,
    prizeLimit,
    counter,
    notes,
    content=stampRallyEntry2024,
    tokenize="unicode61 remove_diacritics 2"
);

CREATE TABLE
    IF NOT EXISTS stampRallyEntry2025 (
        id TEXT NOT NULL,
        fandom TEXT NOT NULL COLLATE NOCASE,
        hostTable TEXT NOT NULL COLLATE NOCASE,
        tables TEXT AS List<String> NOT NULL,
        links TEXT AS List<String> NOT NULL,
        tableMin INTEGER,
        totalCost INTEGER,
        prize TEXT,
        prizeLimit INTEGER,
        series TEXT AS List<String> NOT NULL,
        notes TEXT,
        counter INTEGER NOT NULL DEFAULT 1,
        confirmed INTEGER AS Boolean NOT NULL DEFAULT 0,
        PRIMARY KEY (id)
    );

CREATE VIRTUAL TABLE IF NOT EXISTS stampRallyEntry2025_fts USING FTS5 (
    id,
    fandom,
    tables,
    totalCost,
    prizeLimit,
    counter,
    prize,
    series,
    notes,
    confirmed,
    content=stampRallyEntry2025,
    tokenize="unicode61 remove_diacritics 2"
);

CREATE TABLE
    IF NOT EXISTS stampRallyArtistConnection (
        stampRallyId TEXT NOT NULL,
        artistId TEXT NOT NULL,
        PRIMARY KEY (stampRallyId, artistId)
    );

CREATE INDEX IF NOT EXISTS index_stampRallyArtistConnection_stampRallyId ON stampRallyArtistConnection (stampRallyId);
CREATE INDEX IF NOT EXISTS index_stampRallyArtistConnection_artistId ON stampRallyArtistConnection (artistId);

CREATE TABLE
    IF NOT EXISTS stampRallySeriesConnection (
        stampRallyId TEXT NOT NULL,
        seriesId TEXT NOT NULL,
        PRIMARY KEY (stampRallyId, seriesId)
    );

CREATE INDEX IF NOT EXISTS index_stampRallySeriesConnection_stampRallyId ON stampRallySeriesConnection (stampRallyId);
CREATE INDEX IF NOT EXISTS index_stampRallySeriesConnection_seriesId ON stampRallySeriesConnection (seriesId);

CREATE TABLE
    IF NOT EXISTS seriesEntry (
        id TEXT NOT NULL COLLATE NOCASE,
        uuid TEXT NOT NULL,
        notes TEXT,
        aniListId INTEGER,
        aniListType TEXT,
        wikipediaId INTEGER,
        source TEXT AS SeriesSource,
        titlePreferred TEXT NOT NULL COLLATE NOCASE,
        titleEnglish TEXT NOT NULL COLLATE NOCASE,
        titleRomaji TEXT NOT NULL COLLATE NOCASE,
        titleNative TEXT NOT NULL COLLATE NOCASE,
        link TEXT,
        has2024 INTEGER AS Boolean NOT NULL DEFAULT 0,
        has2025 INTEGER AS Boolean NOT NULL DEFAULT 0,
        counter INTEGER NOT NULL DEFAULT 1,
        PRIMARY KEY (id)
    );

CREATE VIRTUAL TABLE IF NOT EXISTS seriesEntry_fts USING FTS5 (
    id,
    uuid,
    aniListType,
    source,
    titlePreferred,
    titleEnglish,
    titleRomaji,
    titleNative,
    has2024,
    has2025,
    counter,
    content=seriesEntry,
    tokenize="unicode61 remove_diacritics 2"
);

CREATE TABLE
    IF NOT EXISTS merchEntry (
        name TEXT NOT NULL,
        uuid TEXT NOT NULL,
        notes TEXT,
        categories TEXT,
        has2024 INTEGER AS Boolean NOT NULL DEFAULT 0,
        has2025 INTEGER AS Boolean NOT NULL DEFAULT 0,
        PRIMARY KEY (name)
    );

CREATE VIRTUAL TABLE IF NOT EXISTS merchEntry_fts USING FTS5 (
    name,
    uuid,
    has2024,
    has2025,
    content=merchEntry,
    tokenize="unicode61 remove_diacritics 2"
);
